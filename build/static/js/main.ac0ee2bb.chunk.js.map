{"version":3,"sources":["validate.js","Signin.js","Signup.js","PageIndex.js","App.js","serviceWorker.js","index.js"],"names":["Validator","data","rules","_this","this","errors","forEach","rule","value","key","required","error","ensureObject","Object","keys","filter","validatorKey","Error","concat","pattern","test","minLength","length","maxLength","obj","name","fn","prototype","Signin","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","signInData","nickname","password","event","field","val","target","copy","JSON","parse","stringify","setState","_this2","_this$state$signInDat","validate","console","log","AV","User","logIn","then","user","history","push","code","nickName","_this3","react_default","a","createElement","className","onChange","e","onSignInFromValueChange","type","placeholder","onClick","login","react_router_dom","to","Component","withRouter","Signup","signUpData","email","confirmPassword","_this$state$signUpDat","setUsername","setEmail","setPassword","signUp","loginedUser","rawMessage","onValueChange","onSubmitSignUpForm","PageIndex","current","current_user","logOut","response","logout","App","init","appId","appKey","react_router","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ac0ee2bb.chunk.js","sourcesContent":["class Validator {\r\n  static add(name, fn) {\r\n    Validator.prototype[name] = fn\r\n  }\r\n\r\n  validate(data, rules) {\r\n    let errors = {}\r\n\r\n    rules.forEach((rule) => {\r\n      let value = data[rule.key]\r\n      if (rule.required) {\r\n        let error = this.required(value)\r\n        if (error) {\r\n          this.ensureObject(errors, rule.key)\r\n          errors[rule.key].required = error\r\n          return\r\n        }\r\n      }\r\n\r\n      // 遍历 validators 并逐一调用对应的函数\r\n      let validators = Object.keys(rule).filter(key => key !== 'key' && key !== 'required')\r\n      validators.forEach(validatorKey => {\r\n        // key is pattern / minLength / maxLength / hasNumber string\r\n        if (this[validatorKey]) {\r\n          let error = this[validatorKey](value, rule[validatorKey])\r\n          if (error) {\r\n            this.ensureObject(errors, rule.key)\r\n            errors[rule.key][validatorKey] = error\r\n          }\r\n        } else {\r\n          throw Error(`不存在的校验器: ${validatorKey}`)\r\n        }\r\n      })\r\n    })\r\n    return errors\r\n  }\r\n\r\n  required(value) {\r\n    if (value !== 0 && !value) {\r\n      return '必填'\r\n    }\r\n  }\r\n\r\n  pattern(value, pattern) {\r\n    if (pattern === 'email') {\r\n      pattern = /^.+@.+$/\r\n    }\r\n    if (pattern.test(value) === false) {\r\n      return '格式不正确'\r\n    }\r\n  }\r\n\r\n  minLength(value, minLength) {\r\n    if (value.length < minLength) {\r\n      return '太短'\r\n    }\r\n  }\r\n\r\n  maxLength(value, maxLength) {\r\n    if (value.length > maxLength) {\r\n      return '太长'\r\n    }\r\n  }\r\n\r\n  ensureObject(obj, key) {\r\n    if (typeof obj[key] !== 'object') {\r\n      obj[key] = {}\r\n    }\r\n  }\r\n}\r\n\r\nexport default Validator\r\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport AV from  'leancloud-storage';\nimport Validator from './validate'\n\n\nclass Signin extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      signInData: {\n        nickname: '',\n        password: '',\n      },\n      errors: {}\n    }\n  }\n\n  onSignInFromValueChange (event, field) {\n    const val = event.target.value\n    let copy = JSON.parse(JSON.stringify(this.state))\n    copy.signInData[field] = val\n    copy.errors = {}\n    this.setState(copy)\n  }\n\n  login() {\n    const { nickname, password } = this.state.signInData\n    //\n    const data = this.state.signInData\n    let rules = [\n      {key: 'nickname', minLength: 3},\n      {key: 'password', minLength: 6},\n    ]\n    let validator = new Validator()\n    let errors = validator.validate(data, rules)\n    console.log(errors)\n    this.setState({\n      errors\n    })\n    if (Object.keys(errors).length > 0) {\n      return\n    }\n    //\n    AV.User.logIn(nickname, password)\n      .then(user => {\n        console.log(user)\n        this.props.history.push('/index')\n      }, error => {\n        if (error.code === 210) {\n          const copy = JSON.parse(JSON.stringify(this.state))\n          let { errors } = copy\n          //\n          errors.password = { minLength: '用户名密码不匹配' }\n          this.setState(copy)\n        } else if (error.code === 211) {\n          const copy = JSON.parse(JSON.stringify(this.state))\n          let { errors } = copy\n          //\n          errors.nickName = { minLength: '用户名密码不匹配' }\n          this.setState(copy)\n        } else {\n          console.log(error)\n          console.log(typeof error)\n          console.log(Object.keys(error))\n          console.log(error.code)\n        }\n      })\n  }\n\n  render () {\n    return (\n      <div className=\"container\">\n        <div className=\"sign_up\">\n          <h1>用户登录</h1>\n          <p>\n            <input onChange={(e) => { this.onSignInFromValueChange(e, 'nickname')}} value={this.state.signInData.nickname} className={this.state.errors.nickname ? 'middle error' : 'middle'} type=\"text\" placeholder=\"用户名\" />\n            {this.state.errors.nickname ? <span className=\"error-tip\">{this.state.errors.nickname.minLength}</span> : ''}\n          </p>\n          <p>\n            <input onChange={(e) => { this.onSignInFromValueChange(e, 'password')}} value={this.state.signInData.password}  className={this.state.errors.password ? 'middle error' : 'middle'} type=\"password\" placeholder=\"密码\" />\n            {this.state.errors.password ? <span className=\"error-tip\">{this.state.errors.password.minLength}</span> : ''}\n          </p>\n          <p>\n            <input onClick={() => { this.login() }} className=\"middle-button\" type=\"submit\" value=\"登录\"/>\n            <Link to=\"/signup\" >去注册 >> </Link>\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Signin);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AV from 'leancloud-storage';\nimport Validator from './validate'\n\nclass Signup extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      signUpData: {\n        nickname: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n      },\n      errors: {}\n    }\n  }\n\n  onValueChange (event, field) {\n    const val = event.target.value\n    let copy = JSON.parse(JSON.stringify(this.state))\n    copy.signUpData[field] = val\n    copy.errors = {}\n    this.setState(copy)\n  }\n\n  onSubmitSignUpForm () {\n    const {nickname, email, password, confirmPassword} = this.state.signUpData\n    //\n    const data = this.state.signUpData\n    let rules = [\n      {key: 'nickname', minLength: 3},\n      {key: 'password', minLength: 6},\n      {key: 'email', pattern: 'email'},\n    ]\n    let validator = new Validator()\n    let errors = validator.validate(data, rules)\n    //\n    if (confirmPassword !== password) {\n      errors.confirmPassword = {pattern: '两次密码输入不一致'}\n    }\n    console.log(errors)\n    this.setState({\n      errors\n    })\n    if (Object.keys(errors).length > 0) {\n      return\n    }\n    //\n    const user = new AV.User()\n    user.setUsername(nickname)\n    user.setEmail(email)\n    user.setPassword(password)\n    user.signUp().then((loginedUser) => {\n      console.log('loginedUser')\n      console.log(loginedUser)\n      this.props.history.push('/index');\n    }, (error) => {\n      if (error.code === 125) {\n        const copy = JSON.parse(JSON.stringify(this.state))\n        let { errors } = copy\n        errors.email = { email: '邮箱格式不正确' }\n        this.setState(copy)\n      } else if (error.code === 202) {\n        const copy = JSON.parse(JSON.stringify(this.state))\n        let { errors } = copy\n        errors.nickname = { minLength: '用户名已被占用' }\n        this.setState(copy)\n      }  else if (error.code === 203) {\n        const copy = JSON.parse(JSON.stringify(this.state))\n        let { errors } = copy\n        errors.email = { pattern: error.rawMessage }\n        this.setState(copy)\n      } else {\n        console.log(error)\n        console.log(typeof error)\n        console.log(Object.keys(error))\n        console.log(error.code)\n      }\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"container\">\n        <div className=\"sign_up\">\n          <h1>用户注册</h1>\n          <p>\n            <input onChange={(e) => { this.onValueChange(e, 'nickname')}} value={this.state.signUpData.nickname}\n              className={this.state.errors.nickname ? 'middle error' : 'middle'} type=\"text\" placeholder=\"昵称\" />\n            {this.state.errors.nickname ? <span className=\"error-tip\">{this.state.errors.nickname.minLength}</span> : ''}\n          </p>\n          <p>\n            <input onChange={(e) => { this.onValueChange(e, 'email')}} value={this.state.signUpData.email}\n              className={this.state.errors.email ? 'middle error' : 'middle'} type=\"text\" placeholder=\"Email\" />\n            {this.state.errors.email ? <span className=\"error-tip\">{this.state.errors.email.pattern}</span> : ''}\n          </p>\n          <p>\n            <input onChange={(e) => { this.onValueChange(e, 'password')}}\n              value={this.state.signUpData.password}  className={this.state.errors.password ? 'middle error' : 'middle'} type=\"password\" placeholder=\"密码\" />\n            {this.state.errors.password ? <span className=\"error-tip\">{this.state.errors.password.minLength}</span> : ''}\n          </p>\n          <p>\n            <input onChange={(e) => { this.onValueChange(e, 'confirmPassword')}}\n              value={this.state.signUpData.confirmPassword}\n              className={this.state.errors.confirmPassword ? 'middle error' : 'middle'}\n              type=\"password\" placeholder=\"重复密码\" />\n            {this.state.errors.confirmPassword ?\n              <span className=\"error-tip\">{this.state.errors.confirmPassword.pattern}</span> : ''}\n          </p>\n          <p> <input onClick={() => { this.onSubmitSignUpForm() }} className=\"middle-button\" type=\"submit\" value=\"注册\"/> </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Signup);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AV from  'leancloud-storage';\n\nclass PageIndex extends Component  {\n  componentDidMount() {\n    if (!AV.User.current()) {\n      this.props.history.push('/signin');\n    }\n    this.setState({\n      current_user: AV.User.current()\n    })\n  }\n\n  logout() {\n    console.log('this', this.state)\n    AV.User.logOut()\n      .then((response) => {\n        this.props.history.push('/signin');\n        console.log('logout response')\n        console.log(response)\n        console.log('this2', this.state)\n        this.setState({\n          current_user: null,\n        });\n      })\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        我是主页\n        <span className=\"aWithoutHref\" onClick={() => {this.logout()}}>登出</span>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(PageIndex)\n","import React from 'react';\nimport {HashRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport AV from  'leancloud-storage';\n\nimport './App.css';\nimport Signin from './Signin'\nimport Signup from './Signup'\nimport PageIndex from './PageIndex'\n\nfunction App() {\n  console.log('init app');\n  AV.init({\n    appId: 'FYCTcKYDOcOsKw2vnRmNvBwQ-gzGzoHsz',\n    appKey: 'BVDwbxfu4n7ziAUpuEDnf2z3',\n  })\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/signin\"/>\n          )}/>\n          <Route path=\"/signin\" component={Signin}/>\n          <Route path=\"/signup\" component={Signup}/>\n          <Route path=\"/index\" component={PageIndex}/>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}